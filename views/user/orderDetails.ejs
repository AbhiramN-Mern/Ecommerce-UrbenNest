<%- include("../../views/partials/user/header", { currentPage: 'orderDetails' }) %>

<main class="container my-5">
  <section class="content-main">
    <!-- Order Header -->
    <div class="card mb-4">
      <div class="card-header bg-light">
        <h2 class="content-title mb-0">Order Details</h2>
      </div>
      <div class="card-body">
        <div class="mb-3">
          <span class="text-muted">Order ID:</span> <strong><%= orders._id %></strong>
        </div>
        <div class="mb-3">
          <span class="text-muted">Order Date:</span> <strong><%= orderDate %></strong>
        </div>
        
        <% if (orders.status === "Pending" && orders.payment === "razorpay") { %>
          <div class="mb-3">
            <button class="btn btn-primary" onclick="retryPayment('<%= orders._id %>', <%= orders.finalAmount %>)">
              <i class="material-icons md-payment"></i> Retry Payment
            </button>
          </div>
        <% } %>
      </div>
    </div>

    <!-- Order Information Cards -->
    <div class="row mb-4">
      <!-- Customer Information -->
      <div class="col-md-4 mb-3">
        <div class="card h-100">
          <div class="card-header bg-light">
            <h5 class="card-title mb-0">
              <i class="material-icons text-primary">person</i> Customer
            </h5>
          </div>
          <div class="card-body">
            <% if (orders.address && typeof orders.address === 'object' && !Array.isArray(orders.address) && orders.address.name) { %>
              <p class="mb-1"><strong><%= orders.address.name %></strong></p>
              <p class="mb-0"><%= orders.address.phone || 'No phone provided' %></p>
            <% } else if (orders.address && Array.isArray(orders.address) && orders.address.length > 0) { %>
              <p class="mb-1"><strong><%= orders.address[0].name || 'N/A' %></strong></p>
              <p class="mb-0"><%= orders.address[0].phone || 'No phone provided' %></p>
            <% } else { %>
              <p class="text-muted">Customer details not available</p>
            <% } %>
          </div>
        </div>
      </div>

      <!-- Order Summary -->
      <div class="col-md-4 mb-3">
        <div class="card h-100">
          <div class="card-header bg-light">
            <h5 class="card-title mb-0">
              <i class="material-icons text-primary">receipt</i> Order Summary
            </h5>
          </div>
          <div class="card-body">
            <div class="d-flex justify-content-between mb-2">
              <span>Payment Method:</span>
              <strong><%= orders.payment || 'N/A' %></strong>
            </div>
            <div class="d-flex justify-content-between mb-2">
              <span>Status:</span>
              <strong class="text-<%= orders.status === 'Delivered' ? 'success' : (orders.status === 'Pending' ? 'warning' : 'primary') %>">
                <%= orders.status || 'N/A' %>
              </strong>
            </div>
            <div class="d-flex justify-content-between mb-2">
              <span>Subtotal:</span>
              <strong>₹<%= (orders.totalPrice || 0).toLocaleString() %></strong>
            </div>
            <div class="d-flex justify-content-between mb-2">
              <span>Delivery:</span>
              <strong>₹<%= (orders.deliveryCharge || 0).toLocaleString() %></strong>
            </div>
            <hr>
            <div class="d-flex justify-content-between">
              <span>Total:</span>
              <strong>₹<%= (orders.finalAmount || 0).toLocaleString() %></strong>
            </div>
          </div>
        </div>
      </div>

      <!-- Delivery Address -->
      <div class="col-md-4 mb-3">
        <div class="card h-100">
          <div class="card-header bg-light">
            <h5 class="card-title mb-0">
              <i class="material-icons text-primary">place</i> Delivery Address
            </h5>
          </div>
          <div class="card-body">
            <% if (orders.address && Array.isArray(orders.address) && orders.address.length > 0) { %>
              <p class="mb-1">
                <%= orders.address[0].name || '' %><br>
                <%= orders.address[0].city || '' %><br>
                <%= orders.address[0].landMark || '' %><br>
                <%= orders.address[0].state || '' %><br>
                <%= orders.address[0].pinCode || '' %><br>
                <%= orders.address[0].phone || '' %><br>
                <%= orders.address[0].altPhone || '' %>
              </p>
              <p class="mb-3"><%= orders.address[0].addressType || '' %></p>
              
              <% if (orders.status === "Delivered") { %>
                <a href="/downloadInvoice/<%= orders._id %>" class="btn btn-sm btn-outline-primary">
                  <i class="material-icons md-file_download"></i> Download Invoice
                </a>
              <% } %>
            <% } else if (orders.address && typeof orders.address === 'object' && !Array.isArray(orders.address)) { %>
              <p class="mb-1">
                <%= orders.address.name || '' %><br>
                <%= orders.address.city || '' %><br>
                <%= orders.address.landMark || '' %><br>
                <%= orders.address.state || '' %><br>
                <%= orders.address.pinCode || '' %><br>
                <%= orders.address.phone || '' %><br>
                <%= orders.address.altPhone || '' %>
              </p>
              <p class="mb-3"><%= orders.address.addressType || '' %></p>
              
              <% if (orders.status === "Delivered") { %>
                <a href="/downloadInvoice/<%= orders._id %>" class="btn btn-sm btn-outline-primary">
                  <i class="material-icons md-file_download"></i> Download Invoice
                </a>
              <% } %>
            <% } else { %>
              <p class="text-muted">Delivery address not available</p>
            <% } %>
          </div>
        </div>
      </div>
    </div>

    <!-- Order Items Table -->
    <div class="card mb-4">
      <div class="card-header bg-light">
        <h5 class="card-title mb-0">Ordered Items</h5>
      </div>
      <div class="card-body p-0">
        <div class="table-responsive">
          <table class="table table-hover table-bordered mb-0">
            <thead class="bg-light">
              <tr>
                <th class="text-center" style="width: 80px;">Image</th>
                <th>Product</th>
                <th class="text-center">Price</th>
                <th class="text-center">Qty</th>
                <th class="text-center">Total</th>
                <th class="text-center">Actions</th>
              </tr>
            </thead>
            <tbody>
              <% if (orders.product && Array.isArray(orders.product) && orders.product.length > 0) { %>
                <% orders.product.forEach((product) => { %>
                  <tr>
                    <td class="text-center align-middle">
                      <img src="/uploads/re-image/<%= product.image || 'default.jpg' %>" 
                           class="img-fluid" 
                           style="max-height: 60px; max-width: 60px;" 
                           alt="<%= product.name || 'Product' %>">
                    </td>
                    <td class="align-middle"><%= product.name || product.title || 'N/A' %></td>
                    <td class="text-center align-middle">₹<%= (product.price || 0).toLocaleString() %></td>
                    <td class="text-center align-middle"><%= product.quantity || 0 %></td>
                    <td class="text-center align-middle">
                      ₹<%= ((parseInt(product.price) || 0) * (parseInt(product.quantity) || 0)).toLocaleString() %>
                    </td>
                    <td class="text-center align-middle">
                      <% if (product.productStatus !== "Cancelled" && product.productStatus !== "Returned") { %>
                        <% if (["Confirmed", "Pending", "Shipped"].includes(orders.status)) { %>
                          <button class="btn btn-sm btn-outline-danger mb-1" 
                          onclick="toggleCancelForm('<%= product._id %>')">
                    Cancel
                  </button>
                  <div id="cancelForm_<%= product._id %>" 
                       class="mt-2 p-2 border rounded" 
                       style="display: none;">
                    <form onsubmit="submitCancelOrder(event, '<%= typeof order !== 'undefined' ? order._id : orders._id %>', '<%= product.productId ? product.productId.toString() : product._id.toString() %>')">
                      <div class="mb-2">
                        <label for="cancelReason_<%= product._id %>" 
                               class="form-label small">Reason:</label>
                        <select class="form-select form-select-sm" 
                                id="cancelReason_<%= product._id %>" 
                                name="reason" 
                                required>
                          <option value="" disabled selected>Select reason</option>
                          <option value="Changed my mind">Changed my mind</option>
                          <option value="Found a better price elsewhere">Better price elsewhere</option>
                          <option value="Item no longer needed">No longer needed</option>
                          <option value="Shipping delay">Shipping delay</option>
                          <option value="Other">Other</option>
                        </select>
                      </div>
                      <button type="submit" class="btn btn-sm btn-danger w-100">Submit</button>
                    </form>
                  </div>
                        <% } else if (orders.status === "Delivered") { %>
                          <button class="btn btn-sm btn-outline-danger mb-1" 
                          onclick="toggleCancelForm('<%= product._id %>')">
                    Cancel
                  </button>
                  <div id="cancelForm_<%= product._id %>" 
                       class="mt-2 p-2 border rounded" 
                       style="display: none;">
                    <form onsubmit="submitCancelOrder(event, '<%= order._id %>', '<%= product.productId ? product.productId.toString() : product._id.toString() %>')">
                      <div class="mb-2">
                        <label for="cancelReason_<%= product._id %>" 
                               class="form-label small">Reason:</label>
                        <select class="form-select form-select-sm" 
                                id="cancelReason_<%= product._id %>" 
                                name="reason" 
                                required>
                          <option value="" disabled selected>Select reason</option>
                          <option value="Changed my mind">Changed my mind</option>
                          <option value="Found a better price elsewhere">Better price elsewhere</option>
                          <option value="Item no longer needed">No longer needed</option>
                          <option value="Shipping delay">Shipping delay</option>
                          <option value="Other">Other</option>
                        </select>
                      </div>
                      <button type="submit" class="btn btn-sm btn-danger w-100">Submit</button>
                    </form>
                  </div>
                        <% } %>
                      <% } else { %>
                        <span class="badge bg-<%= product.productStatus === 'Cancelled' ? 'danger' : 'warning' %>">
                          <%= product.productStatus %>
                        </span>
                      <% } %>
                    </td>
                  </tr>
                <% }) %>
              <% } else { %>
                <tr>
                  <td colspan="6" class="text-center py-3">No products found</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Reviews Section (Only for Delivered Orders) -->
    <% if (orders.status === "Delivered") { %>
      <div class="card">
        <div class="card-header bg-light">
          <h5 class="card-title mb-0">Product Reviews</h5>
        </div>
        <div class="card-body">
          <% if (orders.product && Array.isArray(orders.product) && orders.product.length > 0) { %>
            <div class="row">
              <% orders.product.forEach((product) => { %>
                <% if (product.productStatus !== "Cancelled" && product.productStatus !== "Returned") { %>
                  <div class="col-md-6 mb-4">
                    <div class="card h-100 border">
                      <div class="card-header bg-light d-flex align-items-center">
                        <img src="/uploads/re-image/<%= product.image || 'default.jpg' %>" 
                             class="me-2" 
                             style="height: 40px; width: 40px; object-fit: cover;" 
                             alt="<%= product.name %>">
                        <h6 class="mb-0"><%= product.name || 'N/A' %></h6>
                      </div>
                      <div class="card-body">
                        <form class="reviewForm" data-product-id="<%= product.productId || product._id %>">
                          <input type="hidden" name="productId" value="<%= product.productId || product._id %>">
                          <div class="mb-3">
                            <label for="rating_<%= product._id %>" class="form-label">Your Rating</label>
                            <select class="form-select" id="rating_<%= product._id %>" name="rating" required>
                              <option value="1">★</option>
                              <option value="2">★★</option>
                              <option value="3">★★★</option>
                              <option value="4">★★★★</option>
                              <option value="5" selected>★★★★★</option>
                            </select>
                          </div>
                          <div class="mb-3">
                            <label for="reviewText_<%= product._id %>" class="form-label">Your Review</label>
                            <textarea class="form-control" 
                                      id="reviewText_<%= product._id %>" 
                                      name="reviewText" 
                                      rows="3" 
                                      placeholder="Share your experience with this product..." 
                                      required></textarea>
                          </div>
                          <button type="submit" class="btn btn-primary w-100">Submit Review</button>
                        </form>
                      </div>
                    </div>
                  </div>
                <% } %>
              <% }) %>
            </div>
          <% } else { %>
            <div class="alert alert-info">No products available to review.</div>
          <% } %>
        </div>
      </div>
    <% } %>
  </section>
</main>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
  // Toggle cancel form visibility
  function toggleCancelForm(productId) {
  const form = document.getElementById(`cancelForm_${productId}`);
  if (form) {
    form.style.display = form.style.display === 'none' ? 'block' : 'none';
  }
}

function submitCancelOrder(event, orderId, productId) {
  event.preventDefault();
  
  // Debug logging
  console.log("Submitting cancel order with:", {orderId, productId});
  
  if (!orderId || orderId === 'undefined') {
    // Try to get order ID from URL as a fallback
    const urlParams = new URLSearchParams(window.location.search);
    orderId = urlParams.get('id');
    
    console.log("Extracted order ID from URL:", orderId);
    
    if (!orderId) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Order ID is missing. Please refresh the page and try again.',
      });
      return;
    }
  }
  
  const reasonSelect = document.getElementById(`cancelReason_${productId}`);
  const reason = reasonSelect.value;

  if (!reason) {
    Swal.fire({
      icon: 'error',
      title: 'Reason Required',
      text: 'Please select a reason for cancellation',
    });
    return;
  }

  $.ajax({
    url: '/cancelOrder',
    method: 'POST',
    contentType: 'application/json',
    data: JSON.stringify({ 
      orderId: orderId,
      productId: productId,
      reason: reason 
    }),
    success: (response) => {
      if (response.success) {
        Swal.fire({
          icon: 'success',
          title: 'Order Cancelled',
          text: 'The product has been cancelled successfully!',
        }).then(() => {
          window.location.reload();
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Cancellation Failed',
          text: response.message || 'Failed to cancel the order',
        });
      }
    },
    error: (xhr, status, error) => {
      console.error('AJAX error:', error);
      console.error('Response:', xhr.responseText);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'An error occurred while cancelling the order',
      });
    }
  });
}

  // Handle return submission
  function submitReturnOrder(event, orderId, productId, productRowId) {
    event.preventDefault();
    const reasonSelect = document.getElementById(`returnReason_${productRowId}`);
    const reason = reasonSelect.value;

    if (!reason) {
      Swal.fire({
        icon: 'error',
        title: 'Reason Required',
        text: 'Please select a reason for return',
      });
      return;
    }

    console.log('Return request:', { orderId, productId, reason });

    $.ajax({
      url: '/returnrequestOrder',
      method: 'PUT',
      contentType: 'application/json',
      data: JSON.stringify({ orderId, productId, reason }),
      success: (response) => {
        console.log('Server response:', response);
        if (response.success) {
          Swal.fire({
            icon: 'success',
            title: 'Return Initiated',
            text: 'The return request has been initiated successfully!',
          }).then(() => {
            window.location.reload();
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Return Failed',
            text: response.message || 'Failed to process your return request',
          });
        }
      },
      error: (xhr, status, error) => {
        console.error('AJAX error:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An error occurred while processing your return request',
        });
      }
    });
  }

  // Review submission handler
  $(document).ready(function() {
    $('.reviewForm').on('submit', function(event) {
      event.preventDefault();
      const form = $(this);
      const productId = form.data('product-id');
      const rating = form.find('select[name="rating"]').val();
      const reviewText = form.find('textarea[name="reviewText"]').val();

      $.ajax({
        url: '/addReview',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ productId, rating, reviewText }),
        success: function(response) {
          if (response.success) {
            Swal.fire({
              icon: 'success',
              title: 'Review Added',
              text: 'Your review has been added successfully!',
            }).then(() => {
              window.location.reload();
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Failed to Add Review',
              text: response.message || 'Failed to add the review',
            });
          }
        },
        error: function(xhr, status, error) {
          console.error('Review submission error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while adding the review',
          });
        }
      });
    });
  });

  // Payment retry function (placeholder - requires backend implementation)
  function retryPayment(orderId, amount) {
    $.ajax({
      url: '/generateRazorpayOrder',
      method: 'POST',
      data: { orderId, amount },
      success: function(response) {
        if (response.success) {
          var options = {
            "key": "rzp_test_hb0Gpt9IOIzC17",
            "amount": Math.round(amount * 100),
            "currency": "INR",
            "name": "Trend Setter",
            "description": "Retry Payment",
            "image": "https://firebasestorage.googleapis.com/v0/b/ecommerce-397a7.appspot.com/o/logo.jpg?alt=media&token=07b6be19-1ce8-4797-a3a0-f0eaeaafedad",
            "order_id": response.razorPayOrder.id,
            "handler": function(status) {
              verifyPayment(response.razorPayOrder, status, orderId);
            },
            "modal": {
              "ondismiss": function() {
                Swal.fire({
                  title: "Payment Failed",
                  text: "You closed the payment window. Retry?",
                  icon: "error",
                  showCancelButton: true,
                  confirmButtonText: "Retry Payment",
                  cancelButtonText: "Go to Home",
                }).then((result) => {
                  if (result.isConfirmed) {
                    retryPayment(orderId, amount);
                  } else {
                    window.location.href = '/';
                  }
                });
              }
            },
            "prefill": {
              "name": "Customer Name",
              "email": "customer@example.com",
              "contact": "9961618585"
            },
            "theme": {
              "color": "#3399cc"
            }
          };
          var rzp1 = new Razorpay(options);
          rzp1.open();
        } else {
          Swal.fire({
            title: "Error",
            text: "Failed to generate payment order",
            icon: "error"
          });
        }
      },
      error: function(xhr, status, error) {
        console.error('Payment retry error:', error);
        Swal.fire({
          title: "Error",
          text: "An error occurred while processing your request",
          icon: "error"
        });
      }
    });
  }

  // Payment verification (placeholder - requires backend implementation)
  function verifyPayment(order, payment, orderId) {
    $.ajax({
      url: '/verifyPayment',
      method: 'POST',
      data: { order, payment },
      success: (response) => {
        if (response.status) {
          $.ajax({
            url: '/paymentConfirm',
            method: 'POST',
            data: { orderId },
            success: (response) => {
              if (response.status) {
                Swal.fire({
                  title: "Payment Successful",
                  text: "Payment completed successfully",
                  icon: "success"
                }).then(() => {
                  window.location.reload();
                });
              }
            }
          });
        } else {
          Swal.fire({
            title: "Payment Failed",
            text: "Payment verification failed",
            icon: "error"
          });
        }
      }
    });
  }
</script>

<%- include("../../views/partials/user/footer") %>